source('~/surrey/mymaps/takeout-20210329T050852Z-001/myLocations.R')
history <- history[["locations"]]
history$coordinates <- cbind(history$latitudeE7,history$longitudeE7)
history = read_json("./Takeout/Location History/Location History.json", simplifyVector = TRUE)
semantic.history = read_json("./Takeout/Location History/Semantic Location History/2021/2021_FEBRUARY.json", simplifyVector = TRUE)
history <- history[["locations"]]
history$coordinates <- cbind(history$latitudeE7,history$longitudeE7)
head(history["locations"][1])
head(history["locations"])
head(history)
head(semantic.history)
str(semantic.history)
library(leaflet)
leaflet() %>%
addTiles()%>%
addMarkers(lng=74.5,lat=17.97,popup = "My native location", label="whachu sayin")
latitude <- history$latitudeE7
longitude <- history$longitudeE7
len <- length(latitude)
leaflet(data = history[0:20]) %>% addTiles() %>%
addMarkers(~longitudeE7, ~latitudeE7)
leaflet(data = history[0:20,]) %>% addTiles() %>%
addMarkers(~longitudeE7, ~latitudeE7)
leaflet(data = history[1:20,]) %>% addTiles() %>%
addMarkers(~longitudeE7, ~latitudeE7)
data(quakes)
force(quakes)
View(quakes)
leaflet(data = quakes[1:20,]) %>% addTiles() %>%
addMarkers(~long, ~lat)
View(semantic.history)
semantic.history[["timelineObjects"]][["activitySegment"]]
activity.segment <- semantic.history[["timelineObjects"]][["activitySegment"]]
View(activity.segment)
activity.segment <- semantic.history[["timelineObjects"]][["placeVisit"]]
places.visited <- semantic.history[["timelineObjects"]][["placeVisit"]]
View(places.visited)
specify_decimal(1234, 5)
places.visited <- places.visited[rowSums(is.na(places.visited)) != ncol(places.visited),]
View(places.visited)
missmap(places.visited)
install.packages('Amelia') #for using missmap
install.packages("leaflet")
install.packages("leaflet")
library(Amelia)
missmap(places.visited)
missmap(places.visited)
describe(places.visited)
library(psych)
describe(places.visited)
semantic.history[["timelineObjects"]][["placeVisit"]]
describe(places.visited)
missmap(places.visited)
places.visited <- places.visited[rowSums(is.na(places.visited)) != ncol(places.visited),]
is.na(places.visited)
table(is.na(places.visited))
places.visited <- na.omit(places.visited)
table(is.na(places.visited))
View(places.visited)
missmap(places.visited)
dim(places.visited)
str(places.visited)
library(ggplot2)
View(quakes)
View(quakes)
b <- ggplot(quakes, aes(x=depth,y=mag))
b
b <- b + geom_blank() + ylim(3,7) + xlim(0,700)
b
b <- b + geom_hline(yintercept = 35)
b
b <- b + geom_hline(yintercept = 5)
b
b <- b + geom_hline(xintercept = 5)
b
b <- b + geom_hline(yintercept = 5)
b <- b + geom_vline(xintercept = 500)
b
b <- ggplot(quakes, aes(x=depth,y=mag))
b <- b + geom_blank() + ylim(3,7) + xlim(0,700)
b <- b + geom_hline(yintercept = 5)
b <- b + geom_vline(xintercept = 500)
b
b <- b + geom_abline(intercept=4,slope=5)
b
b <- b + geom_abline(intercept=4,slope=0.5)
b
b <- b + geom_abline(intercept=4,slope=0.01)
b
b <- b + geom_abline(intercept=4,slope=0.001)
b
b <- b + geom_abline(intercept=4,slope=0.01)
b
b <- ggplot(quakes, aes(x=depth,y=mag))
b <- b + geom_blank() + ylim(3,7) + xlim(0,700)
b <- b + geom_hline(yintercept = 5)
b <- b + geom_vline(xintercept = 500)
b <- b + geom_abline(intercept=4,slope=0.01)
b
a <- ggplot(places.visited,aes(location.name))
a
a <- ggplot(places.visited,aes(location.name))
a <- a + geom_bar()
a
str(places.visited)
a <- ggplot(places.visited,aes(location$name))
a <- a + geom_bar()
a
a <- a + theme(axis.text.x = element_text(angle = 90))
a
View(history)
c <- ggplot(quakes, aes(depth))
c <- geom_histogram()
c
c <- ggplot(quakes, aes(depth))
c <- c + geom_histogram()
c
d <- ggplot(quakes,aes(mag))
d <- d + geom_histogram()
d
e <- e + geom_hist()
e <- ggplot(quakes,aes(stations))
e <- e + geom_hist()
e <- e + geom_histogram()
e
e <- e + geom_density(kernel="poisson")
e
e <- ggplot(quakes,aes(stations))
e <- e + geom_density(kernel="poisson")
e
e <- e + geom_density(kernel="gaussian")
e
e <- e + geom_histogram()
e <- e + geom_density(kernel="gaussian")
e
e <- e + geom_density(kernel="gaussian")
e
e <- e + geom_density(kernel="gaussian",color="blue")
e
e <- e + geom_density(kernel="gaussian")
e
#e <- e + geom_histogram()
e <- e + geom_dotplot()
e <- e + geom_density(kernel="gaussian")
e
e <- ggplot(quakes,aes(stations))
#e <- e + geom_histogram()
e <- e + geom_dotplot()
e <- e + geom_density(kernel="gaussian")
e
e <- e + geom_freqpoly()
e <- e + geom_density(kernel="gaussian")
e
e <- ggplot(quakes,aes(stations))
#e <- e + geom_histogram()
#e <- e + geom_dotplot()
e <- e + geom_freqpoly()
e <- e + geom_density(kernel="gaussian")
e
#continuous x and continuous y
f <- ggplot(quakes,aes(depth,mag))
f
#continuous x and continuous y
f <- ggplot(quakes,aes(depth,mag))
f <- geom_jitter()
f
#continuous x and continuous y
f <- ggplot(quakes,aes(depth,mag))
f <- f + geom_jitter()
f
f <- f + geom_label(aes=mag)
f
#continuous x and continuous y
f <- ggplot(quakes,aes(depth,mag))
f <- f + geom_jitter()
f <- f + geom_label(aes=mag)
f
f <- f + geom_label(aes(label=mag))
f
as.data.frame(table(places.visited))
table(places.visited)
unique(places.visited)
unique(places.visited$location$name)
table(places.visited$location$name)
av,cv <- table(places.visited$location$name)
h <- ggplot(quakes,aes(depth,mag))
h <- h + geom_jitter()
h
h <- h + geom_point()
h <- h +
h
h <- ggplot(quakes,aes(depth,mag))
h <- h + geom_point()
h <- h +
h
h <- ggplot(quakes,aes(depth,mag))
h <- h + geom_point()
h
unique(quakes$stations)
data<- read.csv("./churn.csv")
unique(quakes$stations)
table(unique(quakes$stations))
length(unique(quakes$stations))
h <- h + geom_point(aes(color=factor(stations)))
h
h <- h + geom_jitter(aes(color=factor(stations)))
h
h <- h + geom_jitter(aes(shape=factor(stations)))
h
h <- ggplot(quakes,aes(depth,mag))
h <- h + geom_jitter(aes(color=factor(stations)))
h
history$locations$timestampMs = as.POSIXct(as.numeric(history$locations$timestampMs)/1000, origin = "1970-01-01")
View(history)
history$timestampMs = as.POSIXct(as.numeric(history$timestampMs)/1000, origin = "1970-01-01")
places.visited$location$sourceInfo$deviceTag = as.POSIXct(as.numeric(places.visited$location$sourceInfo$deviceTag )/1000, origin = "1970-01-01")
places.visited$location$locationConfidence = as.POSIXct(as.numeric(places.visited$location$locationConfidence)/1000, origin = "1970-01-01")
places.visited$location$locationConfidence = as.POSIXct(as.numeric(places.visited$location$locationConfidence)/1000, origin = "1970-01-01")
places.visited$duration$startTimestampMs = as.POSIXct(as.numeric(places.visited$duration$startTimestampMs)/1000, origin = "1970-01-01")
places.visited$duration$endTimestampMs = as.POSIXct(as.numeric(places.visited$duration$endTimestampMs)/1000, origin = "1970-01-01")
places.visited$location$latitudeE7 = places.visited$location$latitudeE7 /1e7
places.visited$location$longitudeE7 = places.visited$location$longitudeE7 /1e7
history$longitudeE7 = history$longitudeE7 / 1e7
history$latitudeE7 = history$latitudeE7/1e7
leaflet(data = places.visited) %>% addTiles() %>%
addMarkers(~longitudeE7, ~latitudeE7)
leaflet(data = places.visited) %>% addTiles() %>%
addMarkers(~location$longitudeE7, ~location$latitudeE7)
leaflet(data = places.visited) %>% addTiles() %>%
addMarkers(~location$longitudeE7, ~location$latitudeE7,popup = ~as.character(location$name), label = ~as.character(location$name))
source('~/surrey/mymaps/takeout-20210329T050852Z-001/myLocations.R')
install.packages("Amelia")
source('~/surrey/mymaps/takeout-20210329T050852Z-001/myLocations.R')
source('~/surrey/business analytics/group_work/churnData/group_proj.R')
install.packages("ggplot2")
install.packages("ggplot2")
source('~/surrey/business analytics/group_work/churnData/group_proj.R')
